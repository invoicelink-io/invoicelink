generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                 String              @id @unique @default(cuid())
  name               String?
  email              String?             @unique
  username           String?             @unique
  avatar_url         String?
  auth_session       Session[]
  key                Key[]
  verification_token VerificationToken[]
  Integration        Integration[]
}

model Session {
  id             String @id @unique @default(cuid())
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique @default(cuid())
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model VerificationToken {
  id      String @id @unique @default(cuid())
  type    Token
  expires BigInt
  token   String
  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)
}

enum Token {
  EMAIL
  PASSWORD
}

enum Gateway {
  PAYFAST
}

model Integration {
  id         String    @id @unique @default(cuid())
  gateway    Gateway
  url        String
  active     Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  payfast    Payfast[]
  user_id    String
  user       User      @relation(references: [id], fields: [user_id], onDelete: Cascade)
}

model Payfast {
  id             String      @id @unique @default(cuid())
  integration_id String
  integration    Integration @relation(fields: [integration_id], references: [id], onDelete: Cascade)
  merchant_id    String
  merchant_key   String
  passphrase     String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
}
